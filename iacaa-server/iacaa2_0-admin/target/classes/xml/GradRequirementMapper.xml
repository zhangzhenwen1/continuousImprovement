<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pzhu.iacaa2_0.mapper.GradRequirementMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.pzhu.iacaa2_0.entity.GradRequirement">
        <result column="id" property="id" />
        <result column="cultivationId" property="cultivationId" />
        <result column="name" property="name" />
        <result column="attributeDescribe" property="attributeDescribe" />
    </resultMap>

    <resultMap id="voResultMap" type="com.pzhu.iacaa2_0.entityVo.GradRequirementVo">
        <result column="id" property="id" />
        <result column="cultivationId" property="cultivationId" />
        <result column="name" property="name" />
        <result column="attributeDescribe" property="attributeDescribe" />
        <association property="targets" column="{attributeId = id, cultivationId = cultivationId}" select="com.pzhu.iacaa2_0.mapper.TargetMapper.getByReqId" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, cultivationId, name, attributeDescribe
    </sql>

    <sql id="Column_List">
        id, cultivationId, name, attributeDescribe
    </sql>

    <select id="listByVo" parameterType="com.pzhu.iacaa2_0.entityVo.GradRequirementVo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_grad_requirement
        <where>
            <trim prefixOverrides="AND">
                <if test="word != null and word !=''">
                    AND (name like CONCAT(CONCAT('%',#{word}),'%') or attributeDescribe like CONCAT(CONCAT('%',#{word}),'%'))
                </if>
                <if test="id != null and id !=''">
                    AND id = #{id}
                </if>
                <if test="name != null and name !=''">
                    AND name = #{name}
                </if>
                <if test="attributeDescribe != null and attributeDescribe !=''">
                    AND attributeDescribe = #{attributeDescribe}
                </if>
                <if test="cultivationId != null">
                    AND cultivationId = #{cultivationId}
                </if>
            </trim>
        </where>
    </select>

    <select id="voList" parameterType="com.pzhu.iacaa2_0.entityVo.GradRequirementVo" resultMap="voResultMap">
        select <include refid="Column_List"></include>
        from t_grad_requirement
        <where>
            <trim prefixOverrides="AND">
                <if test="word != null and word !=''">
                    AND (name like CONCAT(CONCAT('%',#{word}),'%') or attributeDescribe like CONCAT(CONCAT('%',#{word}),'%'))
                </if>
                <if test="id != null and id !=''">
                    AND id = #{id}
                </if>
                <if test="name != null and name !=''">
                    AND name = #{name}
                </if>
                <if test="attributeDescribe != null and attributeDescribe !=''">
                    AND attributeDescribe = #{attributeDescribe}
                </if>
                <if test="cultivationId != null">
                    AND cultivationId = #{cultivationId}
                </if>
            </trim>
        </where>
    </select>

    <!--update id="summaryByReqId" parameterType="java.lang.Long">
        UPDATE t_grad_requirement
        set sys_grade =  (
                SELECT AVG(sys_grade)
                from t_target
                WHERE req_id = #{id}),
            stu_grade =  (
                SELECT AVG(stu_grade)
                from t_target
                WHERE req_id = #{id})
        WHERE id in (select distinct(req_id) from t_target) and id = #{id}
    </update -->

    <insert id="insertBatch" parameterType="com.pzhu.iacaa2_0.entity.GradRequirement">
        INSERT INTO t_grad_requirement
        values
            <foreach collection="list" item="item" separator=",">
                (#{item.id}, #{item.cultivationId}, #{item.name}, #{item.attributeDescribe})
            </foreach>
        ON DUPLICATE KEY UPDATE
                             name=values(name),
                             attributeDescribe=values(attributeDescribe)
    </insert>

</mapper>
